qti-choice-interaction {
  @apply my-2 gap-2;

  &.qti-input-control-hidden {
    qti-simple-choice {
      @apply button hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    }
  }

  &:not(.qti-input-control-hidden) {
    qti-simple-choice {
      @apply check hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    }
  }

  qti-simple-choice {
    &[data-correct-response='true'] {
      &::after {
        content: '\02714';
        @apply text-green-600;
      }
      /* @apply bg-green-100 text-green-600; */
    }
  }

  qti-simple-choice > p {
    @apply m-0 p-0;
  }
}

qti-text-entry-interaction {
  @apply my-2;
  &::part(input) {
    @apply text hover:hov focus:foc;
  }
}

qti-extended-text-interaction {
  @apply my-2;
  &::part(textarea) {
    @apply text hover:hov focus:foc;
  }
}

qti-gap-match-interaction {
  @apply my-2 leading-8;
  qti-gap-text {
    @apply drag hover:hov focus:foc pl-3 pr-2 leading-normal;
  }
  qti-gap {
    @apply drop hover:hov focus:foc inline-flex leading-normal;
    @apply w-32; /* PK: should be set in the javascript, default 100px, or listening to data-width attribute according to the spec */
    &:empty:after {
      content: '\0000a0'; /* when empty, put a space in it */
    }
    &:not(:empty) {
      @apply inline-flex w-auto p-0 shadow-none;
    }
    &:not(:empty) > * {
      @apply flex-1 rotate-0 shadow-none ring-gray-200;
    }
  }
}

qti-hotspot-interaction {
  @apply my-2;

  qti-hotspot-choice {
    @apply hover:bg-blue-100 hover:bg-opacity-30;

    &[shape='circle'] {
      @apply spot hover:hov-ring focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis rounded-full;
    }

    &[shape='rect'] {
      @apply spot hover:hov-ring focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    }

    &[shape='poly'] {
      @apply hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
      &[aria-checked='true'] {
        @apply bg-primary-500;
      }
    }

    /* &::after {
        content: '';
        @apply absolute top-0 block origin-center bg-white;
        height: 95%;
        width: 95%;
        clip-path: inherit;
      } */
  }
}

qti-hottext-interaction {
  @apply my-2;

  &.qti-input-control-hidden {
    qti-hottext {
      @apply button button-sm button-in  hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
      &::part(ch) {
        @apply !hidden;
      }
    }
  }

  &:not(.qti-input-control-hidden) {
    qti-hottext {
      @apply check check-sm check-in hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    }
  }
}

qti-inline-choice-interaction {
  &::part(select) {
    @apply select hover:hov focus:foc; /* aria-checked:act aria-readonly:rdo aria-disabled:dis; */
  }
}

qti-match-interaction:not(.qti-match-tabular) {
  qti-simple-match-set:first-of-type {
    @apply flex flex-wrap gap-2 pb-4;

    qti-simple-associable-choice {
      @apply drag hover:hov focus:foc py-2 pl-4 pr-3;
    }
  }

  qti-simple-match-set:last-of-type {
    @apply grid auto-cols-fr grid-flow-col gap-2;

    qti-simple-associable-choice {
      @apply drop hover:hov focus:foc;
      /* @apply flex h-32  flex-col gap-2; */
      @apply flex h-32 flex-col;
    }

    qti-simple-associable-choice > qti-simple-associable-choice {
      @apply drag hover:hov focus:foc py-2 pl-4 pr-3;
      flex-basis: fit-content;
    }
  }
}

qti-order-interaction {
  &::part(qti-simple-choice),
  qti-simple-choice {
    @apply drag hover:hov focus:foc py-2 pl-4 pr-3;
  }
  &::part(qti-simple-choice) {
    @apply flex w-full items-center overflow-hidden text-ellipsis;
  }
  &::part(drops) {
    @apply gap-2;
  }
  &::part(drags) {
    @apply gap-2;
  }
  &::part(drop-list) {
    @apply drop hover:hov focus:foc flex min-h-[4rem];
  }
  &::part(active) {
    @apply ring-2 ring-primary-400;
  }
}

qti-associate-interaction {
  &::part(qti-simple-associable-choice),
  qti-simple-associable-choice {
    @apply drag hover:hov focus:foc flex items-center overflow-hidden text-ellipsis py-2 pl-4 pr-3;
  }
  &::part(associables-container) {
    @apply my-2 flex w-full justify-between;
    background: linear-gradient(
      180deg,
      rgb(0 0 0 / 0%) calc(50% - 1px),
      #000000 calc(50%),
      rgb(0 0 0 / 0%) calc(50% + 1px)
    );
  }
  &::part(active) {
    @apply ring-2 ring-primary-400;
  }
  &::part(drop-list) {
    @apply drop grid h-[3rem] w-1/3;
  }
}

qti-graphic-order-interaction {
  /* @apply my-2; */

  qti-hotspot-choice {
    @apply spot hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    /* &::after {
        content: '';
        @apply absolute top-0 block scale-75 bg-white;
        height: inherit;
        width: inherit;
        clip-path: inherit;
      } */
    &[aria-ordervalue] {
      @apply order flex items-center justify-center;
    }
    &[aria-ordervalue]::after {
      content: attr(aria-ordervalue) !important;
    }
  }
}

qti-graphic-associate-interaction {
  @apply relative block;

  qti-associable-hotspot {
    &[shape='circle'] {
      /* border-radius: 100%;
        background-color: green; */
      @apply spot hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    }

    &[shape='square'] {
      /* border-radius: 0; */
      /* background-color: green; */
      @apply spot hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis;
    }
  }
}

qti-graphic-gap-match-interaction {
  @apply relative;
  img {
    @apply m-0 p-0;
  }
}

qti-slider-interaction {
  @apply block; /* else no screenshot will be made with html-to-image */

  /* @apply hover:hov focus:foc aria-checked:act aria-readonly:rdo aria-disabled:dis; */

  --qti-tick-color: rgb(229 231 235 / 1);
  --qti-tick-width: 1px;

  &::part(slider) {
    @apply mx-8; /* so the slider stays INSIDE of the qti-slider-interaction */
    @apply pb-4 pt-5; /* this keeps all content in the qti-slider interaction, also for html-to-image */
  }

  --show-bounds: true;
  &::part(bounds) {
    @apply flex w-full justify-between; /* the two divs with value lower and upper will now be at start and end of this bounds container */
    @apply mb-2; /* just so it aligns with the value 'knob' */
  }

  --show-ticks: true;
  &::part(ticks) {
    @apply mx-0.5 mb-1 h-2; /* absolute height for the ticks, and keep distance of the rail. push them 0.5 inward */
    background-position: 0 center;
    background: linear-gradient(to right, var(--qti-tick-color) var(--qti-tick-width), transparent 1px) repeat-x;
    background-size: calc(calc(100% - var(--qti-tick-width)) / ((var(--max) - var(--min)) / var(--step))) 100%;
  }

  &::part(rail) {
    @apply flex items-center; /* so the knob is neatly centered vertically */
    /* DESIGN */
    @apply box-border; /* if you have a border in the design apply, this box-border will make the border stay INSIDE the rail */
    @apply h-1.5 w-full cursor-pointer rounded-full border border-solid border-gray-300 bg-gray-200;
  }

  &::part(knob) {
    @apply relative h-4 w-4 origin-center -translate-x-1/2 cursor-pointer rounded-full bg-primary-500;
    left: var(--value-percentage);
  }

  --show-value: true;
  &::part(value) {
    @apply absolute bottom-8; /* align the value, which you can drag, on top of the knob, so it aligns with the rest of the values */
    @apply left-2; /* should be half width of the knob if you want to center these two */
    @apply -translate-x-1/2 cursor-pointer rounded bg-gray-100 px-2 py-1 text-center text-gray-500;
  }
}

qti-select-point-interaction {
  &::part(point) {
    @apply hover:bg-blue-100 hover:bg-opacity-30;
    @apply point hover:hov-ring focus:foc rounded-full; /* aria-checked:act aria-readonly:rdo aria-disabled:dis ;*/
  }
}

qti-position-object-stage {
  qti-position-object-interaction {
    /* no styles necessary, only layout styles, defined in the component */
    /* height: 40px; */
  }
}

qti-prompt {
  @apply my-2 block w-full;
}
